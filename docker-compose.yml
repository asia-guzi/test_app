

version: '3.9'

services:
  backend:
    build:
      context: .
    container_name: test_app_backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command: >
      bash -c "python3 /app/initial_populate/initial.py && uvicorn app.users.main:app --host 0.0.0.0 --port 8000"

  db:
    image: mysql:8.0
    container_name: test_app_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"

  #for now db only in container - defining volumes means that
  #  dasta are stored not only in conytainer -> after dleete of contaoiner they will not be lost 4ever
  #    volumes:
  #      - mysql_data:/var/lib/mysql
  #
  #volumes:
  #  mysql_data:
  #    driver: local
#
#  initial_populate:
#    build:
#      context: .
#    depends_on:
#      - db
#    environment:
#      DATABASE_HOST: db
#      DATABASE_PORT: 3306
#      DATABASE_USER:  ${MYSQL_USER}
#      DATABASE_PASSWORD: ${MYSQL_PASSWORD}
#      DATABASE_NAME: ${MYSQL_DATABASE}
#    command: >
#      python3 /initial_populate/initial.py




#    docker exec -it test_app_db mysql -u root -p
